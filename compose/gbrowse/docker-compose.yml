
version: "3.2"

services:

  gbrowse:
    build: ./gbrowse

    ports:
      - "10080:80"

    volumes:
      - type: volume
        source: ./gbrowse/conf.d
        target: /etc/gbrowse2

      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true

      - type: volume
        source: ./gbrowse-data
        target: /var/lib/gbrowse2/databases

    links:
      - db
      - lb

    networks:
      - back-tier
      - front-tier


  gbrowse-slave:
    build: ./gbrowse

    ports:
      - "8101"

    command: ["/usr/local/bin/start_slave.sh"]

    volumes:
      - type: volume
        source: ./gbrowse/conf.d
        target: /etc/gbrowse2

      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true

      - type: volume
        source: ./gbrowse-data
        target: /var/lib/gbrowse2/databases

      - type: bind
        source: ./gbrowse/start_slave.sh
        target: /usr/local/bin/start_slave.sh

    links:
      - db

    networks:
      - back-tier


  db:
    # get the latest mysql server
    build: ./db

    # Set db environment
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw

    # export volumes
    volumes:
      - type: volume
        source: ./mysql-data
        target: /var/lib/mysql

      - type: volume
        source: ./db/conf.d
        target: /etc/mysql/conf.d

      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true

    networks:
      - back-tier


  lb:
    image: dockercloud/haproxy:1.6.7

    ports:
      - 80

    links:
      - gbrowse-slave

    networks:
      - front-tier
      - back-tier

    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true


networks:
  front-tier:
    driver: bridge

  back-tier:
    driver: bridge
